FROM openjdk:11.0.7-nanoserver-1809

## install GIT

RUN curl -L "https://github.com/git-for-windows/git/releases/download/v2.25.0.windows.4/MinGit-2.25.0.windows.4-64-bit.zip"  --output c:\mingit.zip
RUN mkdir c:\mingit
RUN tar -xf c:\mingit.zip -C c:\mingit

## install Maven

RUN curl -L "https://www.mirrorservice.org/sites/ftp.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip" --output c:\maven.zip
RUN tar -xf c:\maven.zip

## clone GIT repo
RUN c:\mingit\cmd\git clone --depth=1 --progress --verbose https://github.com/questdb/questdb.git

WORKDIR c:/questdb

## build from source

RUN c:\apache-maven-3.6.3\bin\mvn clean package -DskipTests -P build-web-console,build-binaries,use-built-in-nodejs

## unpack the runtime

WORKDIR c:/questdb/core/target
RUN tar xvfz questdb-5.0.6.1-rt-windows-amd64.tar.gz
#RUN dir questdb-*-rt-windows-amd64.tar.gz

FROM mcr.microsoft.com/windows/nanoserver:1903

WORKDIR /app

COPY --from=0 c:/questdb/core/target/questdb-5.0.6.1-rt-windows-amd64/ .

# Make working folder the quest db folder
WORKDIR /app/bin

# Make port 9000 available to the world outside this container
EXPOSE 9000/tcp
EXPOSE 8812/tcp
EXPOSE 9009/tcp

# create QuestDB root directory
RUN mkdir C:\questdb

VOLUME C:/questdb/db

# Run questdb when the container launches
CMD ["/app/bin/java", "-m", "io.questdb/io.questdb.ServerMain", "-d", "c:/questdb", "-f"]
